dialogs/
├── baseDialogProps.ts
│       // src/types/dialogs/baseDialogProps.ts
│       import { ReactNode } from 'react';
│       
│       export interface BaseDialogProps {
│         title: string;
│         description?: string;
│         trigger: ReactNode;
│         isOpen?: boolean;
│         onOpenChange?: (open: boolean) => void;
│         children: ReactNode;
│         className?: string;
│       }
├── confirmDialogProps.ts
│       // src/types/dialogs/confirmDialogProps.ts
│       import { BaseDialogProps } from './baseDialogProps';
│       
│       export interface ConfirmDialogProps extends BaseDialogProps {
│         confirmLabel?: string;
│         cancelLabel?: string;
│         onConfirm: () => Promise<void>;
│         variant?: 'default' | 'destructive';
│       }
├── formDialogProps.ts
│       // src/types/dialogs/formDialogProps.ts
│       import { BaseDialogProps } from './baseDialogProps';
│       import { UseFormReturn } from '../forms';
│       
│       export interface FormDialogProps<T extends Record<string, any>> extends BaseDialogProps {
│         form: UseFormReturn<T>;
│         submitLabel?: string;
│         cancelLabel?: string;
│         isSubmitting?: boolean;
│         onSubmit: (values: T) => Promise<void>;
│       }
└── index.ts
        // src/types/dialogs/index.ts
        export * from './baseDialogProps';
        export * from './confirmDialogProps';
        export * from './formDialogProps';
